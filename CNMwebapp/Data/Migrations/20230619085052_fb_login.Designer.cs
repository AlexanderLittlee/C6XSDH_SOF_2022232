// <auto-generated />
using System;
using CNMwebapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CNMwebapp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230619085052_fb_login")]
    partial class fb_login
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CNMwebapp.Models.Job", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("WorkersNeeded")
                        .HasColumnType("int");

                    b.HasKey("Uid");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Uid = "10adc16a-9fca-456a-bce8-435298817b28",
                            Date = new DateTime(2023, 6, 26, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "25261447-9333-4536-99bb-200b4803bb86",
                            Date = new DateTime(2023, 6, 27, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "532d7bd7-36ac-487f-a9e3-fadf48b56153",
                            Date = new DateTime(2023, 6, 28, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "3d313a87-a7c2-4873-a3d4-d8916e5b10eb",
                            Date = new DateTime(2023, 6, 29, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "cb898df4-5154-4fd2-8cbd-5274690bcca4",
                            Date = new DateTime(2023, 6, 30, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "7c8bb217-230d-4c28-9198-56f858114469",
                            Date = new DateTime(2023, 7, 1, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "581e5152-e99c-431f-89a0-0a6da050988c",
                            Date = new DateTime(2023, 7, 10, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "2d14d68a-4eaf-440e-ad4b-c9e50fbd3b1f",
                            Date = new DateTime(2023, 7, 11, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "ab61b92f-dee6-45e9-b6b0-c45b05f5712f",
                            Date = new DateTime(2023, 7, 12, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "47306c21-4b63-471a-84fc-d35209c084aa",
                            Date = new DateTime(2023, 7, 13, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "44075001-be05-4983-820d-8e1fb99d14ab",
                            Date = new DateTime(2023, 7, 14, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "cd9f28cd-f8e9-4693-a405-6c3a0766410d",
                            Date = new DateTime(2023, 7, 15, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "de8b72dd-716e-4f7e-914d-12e9e7ee00ae",
                            Date = new DateTime(2023, 7, 16, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "5e90c301-c21c-4538-be6b-01634ff5bebe",
                            Date = new DateTime(2023, 7, 17, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "81dfe6c3-03d5-470a-94f8-18da7a69d1a7",
                            Date = new DateTime(2023, 7, 18, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "12194d4c-a059-46e4-9f57-e9c724b084a0",
                            Date = new DateTime(2023, 7, 19, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "3f45a272-34ff-4249-a072-506196d4539a",
                            Date = new DateTime(2023, 7, 20, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "3bb85fd8-e60a-46ed-b525-fdfc5158afbe",
                            Date = new DateTime(2023, 7, 21, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "b0f1056b-0ddd-4b4c-9863-6f162620c2d4",
                            Date = new DateTime(2023, 7, 22, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "512b2599-8832-4c6b-a37c-6d1ab6b5efdb",
                            Date = new DateTime(2023, 7, 23, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "49a306b2-c6f8-4ed5-b6f2-16aea3ed5861",
                            Date = new DateTime(2023, 7, 24, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "be727dc2-c071-4d03-a9f3-6c41b0a4f749",
                            Date = new DateTime(2023, 7, 25, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "84759a4d-0c74-4794-bc91-121c3d8ffe8e",
                            Date = new DateTime(2023, 7, 26, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "2280d6cb-9ef3-4052-b8d9-9e61d349df47",
                            Date = new DateTime(2023, 7, 27, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "49c1492a-d894-4483-aceb-1817694cac23",
                            Date = new DateTime(2023, 7, 28, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "19387016-d758-4bfd-ae0a-27006f99cb8d",
                            Date = new DateTime(2023, 7, 29, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "5dc54852-d99e-4d2a-a4bd-0d02ea00919f",
                            Date = new DateTime(2023, 7, 30, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "ea6d5c59-45a5-4c9c-b72b-4435ae1648e0",
                            Date = new DateTime(2023, 7, 31, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "7e2284f8-992a-4188-ad15-712e866ea8a5",
                            Date = new DateTime(2023, 8, 1, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "b9c80b72-ab84-4542-9994-019fe113c261",
                            Date = new DateTime(2023, 8, 2, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "3c1231d9-03dd-45ad-959a-0ddf37c2ed3a",
                            Date = new DateTime(2023, 8, 3, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "cadf257b-ce75-475d-b517-4e95dc312027",
                            Date = new DateTime(2023, 8, 4, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "bf29f5a2-e238-4de2-833d-457ac97824a8",
                            Date = new DateTime(2023, 8, 5, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "b983d979-e171-4cf7-b2ba-98a9188c3f83",
                            Date = new DateTime(2023, 8, 6, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "c40667da-664a-469a-88d3-da835874e7df",
                            Date = new DateTime(2023, 8, 7, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "aafb37ac-c9ca-4715-a86e-958e7e268942",
                            Date = new DateTime(2023, 8, 8, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "a7d4f944-81dc-411d-8561-566181e7cbb1",
                            Date = new DateTime(2023, 8, 9, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "13ea41db-40f9-4676-90e6-71daeac10a98",
                            Date = new DateTime(2023, 8, 10, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "7b81d4d4-a797-4510-aa30-f35eeb2e290b",
                            Date = new DateTime(2023, 8, 11, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "33208927-8c4d-44a5-88ff-86c33db5d780",
                            Date = new DateTime(2023, 8, 12, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "5a1652dc-b087-49b9-82a3-741868a44e07",
                            Date = new DateTime(2023, 8, 13, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "5d475ed8-5c4b-4bf2-86ae-df2d3da7ff3a",
                            Date = new DateTime(2023, 8, 14, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "091b8d0f-e417-4d21-8a45-43761ea11301",
                            Date = new DateTime(2023, 8, 15, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "13d6b17e-0bb1-4891-9fc9-10b514edbf3b",
                            Date = new DateTime(2023, 8, 16, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "22de8a26-c7d1-4425-a846-66ccbaf47b16",
                            Date = new DateTime(2023, 8, 17, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "59afb0a7-bd4e-4e67-b144-08389a2f6657",
                            Date = new DateTime(2023, 8, 18, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "20.-i tüzijáték",
                            WorkersNeeded = 5
                        },
                        new
                        {
                            Uid = "9d84aca1-5154-414a-acb9-6e956c1d1b1a",
                            Date = new DateTime(2023, 8, 19, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "20.-i tüzijáték",
                            WorkersNeeded = 5
                        },
                        new
                        {
                            Uid = "b699567f-c2de-4c80-824d-e2e2c08775ad",
                            Date = new DateTime(2023, 8, 20, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "20.-i tüzijáték",
                            WorkersNeeded = 5
                        },
                        new
                        {
                            Uid = "85211770-6587-43c0-a6b4-1b071e41b506",
                            Date = new DateTime(2023, 8, 21, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "881e9c87-3a6d-4e98-b165-539ddf613e31",
                            Date = new DateTime(2023, 8, 22, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "320f4bd1-409c-40f6-a2b7-8733b01d8f98",
                            Date = new DateTime(2023, 8, 23, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "1d171540-e3bf-4e14-9e6d-e124a71e6f5a",
                            Date = new DateTime(2023, 8, 24, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "33d17d4a-4995-4a4f-adcc-7a477fa8b98c",
                            Date = new DateTime(2023, 8, 25, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "52fda7b0-76ac-4550-b075-cdd15137db7b",
                            Date = new DateTime(2023, 8, 26, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "4408034e-3cfa-455d-89fc-5801e8955402",
                            Date = new DateTime(2023, 8, 27, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "aa441c6a-1f88-4584-be71-9a12edbd857d",
                            Date = new DateTime(2023, 8, 28, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "d130843e-c95c-413d-a760-61123aa83c0f",
                            Date = new DateTime(2023, 8, 29, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "0375dfbc-a332-4dea-bd08-efdc062a37ed",
                            Date = new DateTime(2023, 8, 30, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "f14bcdbb-7aa1-4b33-9dd7-af4d53e195e3",
                            Date = new DateTime(2023, 8, 31, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        });
                });

            modelBuilder.Entity("CNMwebapp.Models.SquadMember", b =>
                {
                    b.Property<int>("SquadMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SquadMemberId"), 1L, 1);

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SquadMemberId");

                    b.HasIndex("JobId");

                    b.HasIndex("WorkerId");

                    b.ToTable("SquadMembers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CNMwebapp.Models.Worker", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("DriversLicence")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasDiscriminator().HasValue("Worker");
                });

            modelBuilder.Entity("CNMwebapp.Models.SquadMember", b =>
                {
                    b.HasOne("CNMwebapp.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNMwebapp.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
