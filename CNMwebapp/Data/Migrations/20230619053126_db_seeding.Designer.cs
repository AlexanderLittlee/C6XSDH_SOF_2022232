// <auto-generated />
using System;
using CNMwebapp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CNMwebapp.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230619053126_db_seeding")]
    partial class db_seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CNMwebapp.Models.Job", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("WorkersNeeded")
                        .HasColumnType("int");

                    b.HasKey("Uid");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Uid = "c94681db-6c76-4db3-ad22-4bcf892faa17",
                            Date = new DateTime(2023, 6, 26, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "83f8d57c-7776-4dc9-a947-7dc08fc7eb04",
                            Date = new DateTime(2023, 6, 27, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "2506cb9e-d954-432c-8ce0-c286bc6e1e0e",
                            Date = new DateTime(2023, 6, 28, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "8d66581b-14cf-4552-bb0f-fd7f57d54222",
                            Date = new DateTime(2023, 6, 29, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "fd68479f-f351-4de7-9006-7c10135ff761",
                            Date = new DateTime(2023, 6, 30, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "b448f253-629c-44ac-a5c5-9a4ca140012d",
                            Date = new DateTime(2023, 7, 1, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Balaton Sound",
                            WorkersNeeded = 6
                        },
                        new
                        {
                            Uid = "329ed365-3ca8-4506-a01b-6e0644e1d9d0",
                            Date = new DateTime(2023, 7, 10, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "dbaef5c0-0894-41c7-be61-47de30ef75bb",
                            Date = new DateTime(2023, 7, 11, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "3c8dee3f-3b14-4d12-92d9-0de8247a8883",
                            Date = new DateTime(2023, 7, 12, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "d749cd00-5832-4cae-a9a4-af36c81012b0",
                            Date = new DateTime(2023, 7, 13, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "689ee8e2-494a-4b8a-9b66-59b31e432918",
                            Date = new DateTime(2023, 7, 14, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "addcaa53-5607-407d-b0cd-85b5b76d191d",
                            Date = new DateTime(2023, 7, 15, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "9e14ae2f-e84a-4e21-90a1-116cff1bfd34",
                            Date = new DateTime(2023, 7, 16, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "c7805efa-f3a6-4e90-930e-24d26c18b0ae",
                            Date = new DateTime(2023, 7, 17, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "b4eb0bbf-1e6c-4e96-93b1-fdc5d22d8ade",
                            Date = new DateTime(2023, 7, 18, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "b031413c-5c85-44e7-a5a5-864156f425a1",
                            Date = new DateTime(2023, 7, 19, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "0daca6a7-ff28-4242-ba9b-304cfa4df2b1",
                            Date = new DateTime(2023, 7, 20, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "cc082745-4759-4182-aa76-48f8965745b7",
                            Date = new DateTime(2023, 7, 21, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "9cee3e8b-da52-49dd-8063-26787c8f7119",
                            Date = new DateTime(2023, 7, 22, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "11ecbd72-6fd0-4ea3-a8c3-e1ed2302217b",
                            Date = new DateTime(2023, 7, 23, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "2bf2cc34-e31a-4318-8f36-dd0765769c05",
                            Date = new DateTime(2023, 7, 24, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "db39369b-080f-437b-9690-f61e51539063",
                            Date = new DateTime(2023, 7, 25, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "b0963d59-b0d4-4364-84b0-cb8ff5702069",
                            Date = new DateTime(2023, 7, 26, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "574b4e7e-898a-4a08-9384-c1391517d7dd",
                            Date = new DateTime(2023, 7, 27, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "aee36bcf-f5f5-419d-8f4a-d054aa784a67",
                            Date = new DateTime(2023, 7, 28, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "c3dfe418-00fd-488e-bd0b-ff68448d2191",
                            Date = new DateTime(2023, 7, 29, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "ad2428af-91ac-49f9-8ccc-6a77d0b5c57f",
                            Date = new DateTime(2023, 7, 30, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "d160173f-d19d-496c-bf56-47c6cb259eae",
                            Date = new DateTime(2023, 7, 31, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "d4451f30-0103-4b80-89d2-c7b06a267e98",
                            Date = new DateTime(2023, 8, 1, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "52d1b7c1-f4db-4da0-871a-acb4cd80380b",
                            Date = new DateTime(2023, 8, 2, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "8afc6d83-7e85-4db8-be1c-0111a99e7e09",
                            Date = new DateTime(2023, 8, 3, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "ab13b3a6-ca39-4cf4-bf67-6f24fc8514ce",
                            Date = new DateTime(2023, 8, 4, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "ed50dd9c-fb33-4389-8636-f273707dccd3",
                            Date = new DateTime(2023, 8, 5, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "2ef24374-60b5-476b-9a19-d74daff46b96",
                            Date = new DateTime(2023, 8, 6, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "6338c9f9-95f7-43a3-bc9d-5c5cf712a104",
                            Date = new DateTime(2023, 8, 7, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "af52012d-29b9-4684-b8c1-516330aa2091",
                            Date = new DateTime(2023, 8, 8, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "7982b9b0-7a55-4290-bac2-7f4804214c78",
                            Date = new DateTime(2023, 8, 9, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "83db01cb-530f-40f1-ab41-7ae40509947a",
                            Date = new DateTime(2023, 8, 10, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "bee3e114-0c72-46dd-bb79-90a365b9d534",
                            Date = new DateTime(2023, 8, 11, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "880e0215-7558-4348-bbe7-25daf0625741",
                            Date = new DateTime(2023, 8, 12, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "13089067-26fe-436d-986d-54f14209932a",
                            Date = new DateTime(2023, 8, 13, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "83f75cb3-b671-48ae-b9fc-32776407d196",
                            Date = new DateTime(2023, 8, 14, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "c93cd2a5-82c9-4c1d-8ec2-080defee8d36",
                            Date = new DateTime(2023, 8, 15, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "34cefd03-d722-42a8-ad51-9f096395ff35",
                            Date = new DateTime(2023, 8, 16, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "c803cb89-f08e-4921-b0a9-b8fbad409216",
                            Date = new DateTime(2023, 8, 17, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sziget",
                            WorkersNeeded = 8
                        },
                        new
                        {
                            Uid = "deb45ae8-a09e-40ad-8d72-60aa771db235",
                            Date = new DateTime(2023, 8, 18, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "20.-i tüzijáték",
                            WorkersNeeded = 5
                        },
                        new
                        {
                            Uid = "cc2277e2-fb65-4ce0-b82e-57ce03d08fe1",
                            Date = new DateTime(2023, 8, 19, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "20.-i tüzijáték",
                            WorkersNeeded = 5
                        },
                        new
                        {
                            Uid = "43a21341-4d2c-49ef-a6e3-5cbdc7ef054f",
                            Date = new DateTime(2023, 8, 20, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "20.-i tüzijáték",
                            WorkersNeeded = 5
                        },
                        new
                        {
                            Uid = "4387f9ee-5077-4bf7-8260-8007b42fa8d1",
                            Date = new DateTime(2023, 8, 21, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "fb8aac58-ecc6-41fc-badd-6cc0e054bda3",
                            Date = new DateTime(2023, 8, 22, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "0dcbac84-0922-4751-8145-23bb2dfd2ce8",
                            Date = new DateTime(2023, 8, 23, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "325c440c-acd3-49c0-8e4b-17eaefd74017",
                            Date = new DateTime(2023, 8, 24, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "6bf62fd7-d5f8-4034-b7e2-10d375319246",
                            Date = new DateTime(2023, 8, 25, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "4b61fde1-9772-48a4-af3d-97cdd3ae4205",
                            Date = new DateTime(2023, 8, 26, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "c40a7466-82ca-4598-9dc4-427ba70440ba",
                            Date = new DateTime(2023, 8, 27, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "d1590569-e1a6-4c84-a5ef-eadf73fda62e",
                            Date = new DateTime(2023, 8, 28, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "2136e035-17b9-4b29-aa47-fdbd18341e93",
                            Date = new DateTime(2023, 8, 29, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "6195e1cf-5c35-4ac3-8ed9-60d68e4c7de7",
                            Date = new DateTime(2023, 8, 30, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        },
                        new
                        {
                            Uid = "34acbdc3-8bfe-4d06-b6c2-8ba4ba8fe70a",
                            Date = new DateTime(2023, 8, 31, 7, 15, 0, 0, DateTimeKind.Unspecified),
                            Name = "Atlétikai VB",
                            WorkersNeeded = 3
                        });
                });

            modelBuilder.Entity("CNMwebapp.Models.SquadMember", b =>
                {
                    b.Property<int>("SquadMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SquadMemberId"), 1L, 1);

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("WorkerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SquadMemberId");

                    b.HasIndex("JobId");

                    b.HasIndex("WorkerId");

                    b.ToTable("SquadMembers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CNMwebapp.Models.Worker", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool>("DriversLicence")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasDiscriminator().HasValue("Worker");
                });

            modelBuilder.Entity("CNMwebapp.Models.SquadMember", b =>
                {
                    b.HasOne("CNMwebapp.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CNMwebapp.Models.Worker", "Worker")
                        .WithMany()
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
